# Generated by Django 4.2 on 2023-05-11 22:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import patient.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('doctor', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('new', 'New'), ('confirmed', 'confirmed'), ('cancelled', 'cancelled'), ('completed', 'completed')], default='new', max_length=15)),
                ('meeting_link', models.TextField(null=True)),
                ('symptoms', models.TextField()),
                ('appointment_date', models.DateField(verbose_name='Appointment date')),
                ('appointment_time', models.TimeField(verbose_name='Appointement time')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctor.doctor')),
            ],
            options={
                'ordering': ['appointment_date'],
            },
        ),
        migrations.CreateModel(
            name='patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.DecimalField(decimal_places=1, max_digits=4)),
                ('address', models.TextField()),
                ('mobile', models.CharField(max_length=20)),
                ('pic', models.ImageField(blank=True, null=True, upload_to=patient.models.upload_To)),
                ('email', models.EmailField(max_length=60, verbose_name='email')),
                ('pincode', models.CharField(max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TreatmentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctor.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.patient')),
            ],
        ),
        migrations.CreateModel(
            name='TestReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=20)),
                ('report', models.FileField(blank=True, null=True, upload_to='pdfs/')),
                ('test_date', models.DateField()),
                ('dr', models.CharField(max_length=100)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='patient.patient')),
            ],
            options={
                'ordering': ['test_date'],
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis', models.TextField(max_length=400)),
                ('advice', models.TextField()),
                ('test_required', models.TextField()),
                ('Doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctor.doctor')),
                ('Patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.patient')),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prescription', to='patient.appointment')),
            ],
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('Liquid', 'Liquid'), ('Tablet', 'Tablet'), ('Capsule', 'Capsule'), ('Drop', 'Drop'), ('Ointment', 'Ointment'), ('Injection', 'Injection')], default='Tablet', max_length=10)),
                ('duration', models.TextField()),
                ('times', models.TextField()),
                ('dosage', models.TextField()),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicine', to='patient.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('given', models.BooleanField(default=False)),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('comment', models.TextField(blank=True)),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='patient.appointment')),
                ('dr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='doctor.doctor')),
            ],
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.patient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='treatment_history',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment', to='patient.treatmenthistory'),
        ),
        migrations.AddConstraint(
            model_name='treatmenthistory',
            constraint=models.UniqueConstraint(fields=('patient', 'doctor'), name='patient_dr_unique'),
        ),
        migrations.AddConstraint(
            model_name='patient',
            constraint=models.UniqueConstraint(fields=('mobile', 'email', 'user'), name='patient_unique'),
        ),
    ]
